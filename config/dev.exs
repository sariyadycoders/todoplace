import Config

# Configure your database
config :todoplace, Todoplace.Repo,
  url: "ecto://postgres:postgres@localhost:5432/todoplace_dev",
  stacktrace: true,
  show_sensitive_data_on_connection_error: true,
  pool_size: 10

# For development, we disable any cache and enable
# debugging and code reloading.
#
# The watchers configuration can be used to run external
# watchers to your application. For example, we can use it
# to bundle .js and .css sources.
config :todoplace, TodoplaceWeb.Endpoint,
  # Binding to loopback ipv4 address prevents access from other machines.
  # Change to `ip: {0, 0, 0, 0}` to allow access from other machines.
  http: [ip: {127, 0, 0, 1}, port: 4000],
  check_origin: false,
  code_reloader: true,
  debug_errors: System.get_env("DEBUG_ERRORS", "true") == "true",
  secret_key_base: "9JUfHewUKXWmdga/EGbjKTJGO7ETexoezTuSTNHZRdOC8KZtuQCw3fo96StcEMWX",
  watchers: [
    npm: ["run", "build:watch", cd: Path.expand("../assets", __DIR__)]
  ]

# ## SSL Support
#
# In order to use HTTPS in development, a self-signed
# certificate can be generated by running the following
# Mix task:
#
#     mix phx.gen.cert
#
# Run `mix help phx.gen.cert` for more information.
#
# The `http:` config above can be replaced with:
#
#     https: [
#       port: 4001,
#       cipher_suite: :strong,
#       keyfile: "priv/cert/selfsigned_key.pem",
#       certfile: "priv/cert/selfsigned.pem"
#     ],
#
# If desired, both `http:` and `https:` keys can be
# configured to run both http and https servers on
# different ports.

# Watch static and templates for browser reloading.
config :todoplace, TodoplaceWeb.Endpoint,
  live_reload: [
    patterns: [
      # ~r"priv/static/.*(js|css|png|jpeg|jpg|gif|svg)$",
      ~r"priv/gettext/.*(po)$",
      ~r"lib/todoplace_web/(live|views)/.*(ex)$",
      ~r"lib/todoplace_web/templates/.*(eex)$",
      ~r"lib/todoplace/.*(ex)$",
      ~r"lib/builder/.*(ex|heex)$",
      ~r"assets/.*(scss|js|css)$"
    ]
  ]

# Enable dev routes for dashboard and mailbox
config :todoplace, dev_routes: true

# Do not include metadata nor timestamps in development logs
config :logger, :console, format: "[$level] $message\n"

# Set a higher stacktrace during development. Avoid configuring such
# in production as building large stacktraces may be expensive.
config :phoenix, :stacktrace_depth, 20

# Initialize plugs at runtime for faster development compilation
config :phoenix, :plug_init_mode, :runtime

config :phoenix_live_view,
  # Include HEEx debug annotations as HTML comments in rendered markup
  debug_heex_annotations: true,
  # Enable helpful, but potentially expensive runtime checks
  enable_expensive_runtime_checks: true

# Disable swoosh api client as it is only required for production adapters.
config :todoplace, Todoplace.Mailer,
  adapter: Bamboo.SendgridLocalAdapter,
  api_key: System.get_env("SENDGRID_API_KEY"),
  reply_to_domain: System.get_env("SENDGRID_REPLY_TO_DOMAIN", "dev-inbox.todoplace.com"),
  download_being_prepared_photog: System.get_env("SENDGRID_DOWNLOAD_BEING_PREPARED_PHOTOG"),
  client_transactional_template: System.get_env("SENDGRID_CLIENT_TRANSACTIONAL_TEMPLATE"),
  generic_transactional_template: System.get_env("SENDGRID_GENERIC_TRANSACTIONAL_TEMPLATE"),
  download_ready_photog: System.get_env("SENDGRID_DOWNLOAD_READY_PHOTOG")

config :todoplace, :google_maps_api_key, System.get_env("GOOGLE_MAPS_API_KEY")

config :todoplace, :render_test_ids, true

config :todoplace,
       :feature_flags,
       ~w[sync_whcc_design_details automated_proposal_emails balance_due_emails]a
